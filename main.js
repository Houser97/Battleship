(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,":root {\n    --thickness-boarders: 2px;\n    --color-boarders: rgb(46, 46, 183);\n}\n\n* {\n    padding: 0;\n    margin: 0;\n    outline: none;\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: #E3F2FD;\n    height: 100%;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n}\n\nbutton {\n    min-width: 180px;\n    padding: 15px 0px;\n    align-self: center;\n    margin: 2%;\n    font-size: 25px;\n    font-weight: 600;\n    border-radius: 10px;\n    outline: none;\n    cursor: pointer;\n    border: 2px solid black;\n}\n\nbutton:hover {\n    background-color: rgb(255, 255, 255);\n}\n\nheader {\n    min-width: 100%;\n    max-width: 100%;\n    background-color: rgb(29, 25, 25);\n    color: white;\n    font-size: 10vh;\n    min-height: 15vh;\n    max-height: 15vh;\n    font-weight: 600;\n    display: flex;\n    justify-content: center; align-items: center;\n}\n\n.player-number {\n    display: flex;\n    flex-flow: column;\n    justify-content: center; align-items: center;\n}\n\n.player {\n    align-self: center; justify-self: center;\n    font-size: 40px;\n    font-weight: 600;\n    margin-top: 3%;\n}\n\n.gameboard {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n}\n\n/*-------------------------------------------------------GRID*/\n/*-----------------------------------------------------------*/\n.outer-grid{\n    display: grid;\n    min-height: 420px;\n    min-width: 420px;\n    max-width: 420px;\n    grid-template-columns: repeat(11,1fr);\n    grid-template-rows: repeat(11,1fr);\n}\n\n.grid-player {\n    display: grid;\n    grid-column: 2/-1;\n    grid-row: 2/-1;\n    grid-template-columns: repeat(10,1fr);\n    grid-template-rows: repeat(10,1fr);\n    border: 1.4px solid black;\n}\n\n.grid-unit {\n    border: 1px solid silver;\n}\n\n.coordinate-top{\n    display: grid;\n    grid-column: 2/-1;\n    grid-row: 1;\n    grid-template-columns: repeat(10,1fr);\n    text-align: center;\n    align-items: center;\n}\n\n.coordinate-left{\n    display: grid;\n    grid-column: 1;\n    grid-row: 2/-1;\n    grid-template-rows: repeat(10,1fr);\n    align-items: center; text-align: center;\n}\n\n.ship {\n    background-color: rgba(35, 35, 245, 0.55);\n}\n\n.empty{\n    background-color: rgb(223, 65, 65);\n}\n\n.hit{\n    background-color: rgb(70, 223, 65);\n}\n\n.sunk {\n    background-color: black;\n}\n\n/*-------------------------------------------------------Winner*/\n/*-----------------------------------------------------------*/\n\n.winnerBoard {\n    border: 5px solid gold;\n}\n\n.winnerText {\n    color: goldenrod;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,kCAAkC;AACtC;;AAEA;IACI,UAAU;IACV,SAAS;IACT,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,iBAAiB;IACjB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,aAAa;IACb,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,eAAe;IACf,eAAe;IACf,iCAAiC;IACjC,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,uBAAuB,EAAE,mBAAmB;AAChD;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,uBAAuB,EAAE,mBAAmB;AAChD;;AAEA;IACI,kBAAkB,EAAE,oBAAoB;IACxC,eAAe;IACf,gBAAgB;IAChB,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA,8DAA8D;AAC9D,8DAA8D;AAC9D;IACI,aAAa;IACb,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,qCAAqC;IACrC,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,cAAc;IACd,qCAAqC;IACrC,kCAAkC;IAClC,yBAAyB;AAC7B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,WAAW;IACX,qCAAqC;IACrC,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,cAAc;IACd,cAAc;IACd,kCAAkC;IAClC,mBAAmB,EAAE,kBAAkB;AAC3C;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA,gEAAgE;AAChE,8DAA8D;;AAE9D;IACI,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[":root {\n    --thickness-boarders: 2px;\n    --color-boarders: rgb(46, 46, 183);\n}\n\n* {\n    padding: 0;\n    margin: 0;\n    outline: none;\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: #E3F2FD;\n    height: 100%;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n}\n\nbutton {\n    min-width: 180px;\n    padding: 15px 0px;\n    align-self: center;\n    margin: 2%;\n    font-size: 25px;\n    font-weight: 600;\n    border-radius: 10px;\n    outline: none;\n    cursor: pointer;\n    border: 2px solid black;\n}\n\nbutton:hover {\n    background-color: rgb(255, 255, 255);\n}\n\nheader {\n    min-width: 100%;\n    max-width: 100%;\n    background-color: rgb(29, 25, 25);\n    color: white;\n    font-size: 10vh;\n    min-height: 15vh;\n    max-height: 15vh;\n    font-weight: 600;\n    display: flex;\n    justify-content: center; align-items: center;\n}\n\n.player-number {\n    display: flex;\n    flex-flow: column;\n    justify-content: center; align-items: center;\n}\n\n.player {\n    align-self: center; justify-self: center;\n    font-size: 40px;\n    font-weight: 600;\n    margin-top: 3%;\n}\n\n.gameboard {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n}\n\n/*-------------------------------------------------------GRID*/\n/*-----------------------------------------------------------*/\n.outer-grid{\n    display: grid;\n    min-height: 420px;\n    min-width: 420px;\n    max-width: 420px;\n    grid-template-columns: repeat(11,1fr);\n    grid-template-rows: repeat(11,1fr);\n}\n\n.grid-player {\n    display: grid;\n    grid-column: 2/-1;\n    grid-row: 2/-1;\n    grid-template-columns: repeat(10,1fr);\n    grid-template-rows: repeat(10,1fr);\n    border: 1.4px solid black;\n}\n\n.grid-unit {\n    border: 1px solid silver;\n}\n\n.coordinate-top{\n    display: grid;\n    grid-column: 2/-1;\n    grid-row: 1;\n    grid-template-columns: repeat(10,1fr);\n    text-align: center;\n    align-items: center;\n}\n\n.coordinate-left{\n    display: grid;\n    grid-column: 1;\n    grid-row: 2/-1;\n    grid-template-rows: repeat(10,1fr);\n    align-items: center; text-align: center;\n}\n\n.ship {\n    background-color: rgba(35, 35, 245, 0.55);\n}\n\n.empty{\n    background-color: rgb(223, 65, 65);\n}\n\n.hit{\n    background-color: rgb(70, 223, 65);\n}\n\n.sunk {\n    background-color: black;\n}\n\n/*-------------------------------------------------------Winner*/\n/*-----------------------------------------------------------*/\n\n.winnerBoard {\n    border: 5px solid gold;\n}\n\n.winnerText {\n    color: goldenrod;\n}\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);t&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],l=t.base?s[0]+t.base:s[0],A=a[l]||0,u="".concat(l," ").concat(A);a[l]=A+1;var d=r(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=o(p,t);t.byIndex=c,e.splice(c,0,{identifier:u,updater:f,references:1})}i.push(u)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=r(a[i]);e[c].references--}for(var s=t(n,o),l=0;l<a.length;l++){var A=r(a[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),a=r(569),i=r.n(a),c=r(565),s=r.n(c),l=r(216),A=r.n(l),u=r(589),d=r.n(u),p=r(426),f={};function h(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var t,o,a=[],i=!0,c=!1;try{for(r=r.call(n);!(i=(t=r.next()).done)&&(a.push(t.value),!e||a.length!==e);i=!0);}catch(n){c=!0,o=n}finally{try{i||null==r.return||r.return()}finally{if(c)throw o}}return a}}(n,e)||function(n,e){if(n){if("string"==typeof n)return g(n,e);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?g(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}function m(n){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},m(n)}f.styleTagTransform=d(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=A(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var y,C,b,v,B,I,w,x,S=(y=document,C="no reset",b=y.querySelector(".grid-player.player1"),v=y.querySelector(".grid-player.player2"),B=y.querySelector(".player.player1"),I=y.querySelector(".player.player2"),w=y.querySelectorAll(".player-1-grid"),x=y.querySelectorAll(".player-2-grid"),{player1Plays:function(n){return x.forEach((function(e){return e.addEventListener("click",(function(e){"no winner"===D.theWinner&&"player1"===D.turn&&n.receiveAttack(e,"player1","player2")}))}))},selectWinnerBoard:function(n){return"no winner"!==n?y.querySelector(".grid-player.".concat(n)):n},selectWinnerName:function(n){return"no winner"!==n?y.querySelector(".player.".concat(n)):n},resetButton:function(){y.querySelector(".reset").addEventListener("click",(function(){C="reset"}))},cleanGrids:function(n,e,r){var t=0;"player1"===n?w.forEach((function(n){n.className="",n.removeAttribute("data-ship-number"),e.forEach((function(e){"grid"===e&&(e="grid".concat(t)),n.classList.add(e)})),t+=1})):"player2"===n&&x.forEach((function(n){n.className="",n.removeAttribute("data-ship-number"),r.forEach((function(e){"grid"===e&&(e="grid".concat(t)),n.classList.add(e)})),t+=1}))},gameboard1:b,gameboard2:v,player1Div:B,player2Div:I,get getReset(){return C},set setReset(n){C=n}}),k=function(n,e){return{hit:function(n,e,r){var t=r;return n.includes(e)&&(t-=1),t},isSunk:function(n,e){var r=e;return 0===n?["sunk",r-=1]:["no sunk",r]},currentHealth:e,coordinates:n,get currentCoordinates(){return n}}},E=function(n){return{showShips:function(e,r,t){for(var o=function(r){var o=t[r].coordinates,a=[];o.forEach((function(t){var o=n.querySelector(".".concat(e," .grid").concat(t));o.dataset.shipNumber="".concat(r),a.push(o)}))},a=0;a<r;a+=1)o(a)},displayMiss:function(n){null!==n.getAttribute("data-ship-number")||n.className.includes("empty")||n.className.includes("hit")||n.classList.add("empty")},displayHit:function(n){null===n.getAttribute("data-ship-number")||n.className.includes("hit")||n.classList.add("hit")},showWinner:function(n,e,r){e.classList.add("winnerBoard");var t=r.textContent;r.textContent="".concat(t," wins!"),r.classList.add("winnerText")},removeWinner:function(n,e,r){e.classList.remove("winnerBoard"),r.classList.remove("winnerText"),"player1"===n?r.textContent="Player 1":"player2"===n&&(r.textContent="Computer")}}}(document),j=function(){var n=[],e=["grid","player-1-grid","grid-unit"],r=["grid","player-2-grid","grid-unit"];function t(n){return 5===n.classList[0].length?n.classList[0].substr(-1):n.classList[0].substr(-2)}function o(n){return null!==n.getAttribute("data-ship-number")?parseInt(n.getAttribute("data-ship-number"),10):"no ship has been attacked"}function a(n){var e,r,t=Math.floor(2*Math.random());1===t?(r=Math.floor(10*Math.random()),e=Math.floor(Math.random()*(10-(n+1)))):(r=Math.floor(Math.random()*(10-(n+1))),e=Math.floor(10*Math.random()));for(var o=[],a=0;a<n;a+=1)1===t?o.push(parseInt("".concat(r).concat(e+a),10)):o.push(parseInt("".concat(r+a).concat(e),10));return o}function i(e,r){for(var t=0;t<=r;t+=1)for(var o=n[t],a=0;a<e.length;a+=1)if(o.coordinates.indexOf(e[a])>=0)return!0;return!1}return{generateShips:function(){for(var e,r=0;r<10;r+=1){var t=void 0;r<3&&(t=3),r>=3&&r<7&&(t=2),r>=7&&r<=9&&(t=1);var o=k([],t);n.push(o);do{e=a(t)}while(i(e,r));n[r].coordinates=e}},ships:n,receiveAttack:function(n,e,r){var a,i="no ship has been attacked";if("object"===m(n))a=t(n.target),i=o(n.target),D.setNextTurn(n.target,e,r,a,i);else{var c=document.querySelector(".player1 .grid".concat(n));a=t(c),i=o(c),D.setNextTurn(c,e,r,a,i)}},noShipsAvailable:function(n,e){return 0===e?n:"no winner"},numberOfShips:10,cleanBoard:function(n){S.cleanGrids(n,e,r)},cleanShipList:function(){n=[]},get currentShips(){return n},set newShips(e){n=e}}},M=function(){return{attack:function(n,e){return"player2"===n&&S.player1Plays(e),parseInt((r=Math.floor(10*Math.random()),t=Math.floor(10*Math.random()),"".concat(r).concat(t)),10);var r,t}}},D=function(){var n="player1",e="no winner",r=0,t=j(),o=j();S.resetButton(),t.generateShips(),o.generateShips(),E.showShips("player1",10,t.ships),E.showShips("player2",10,o.ships);var a=M(),i=M();function c(){console.log("reset"),t.cleanBoard("player1"),o.cleanBoard("player2"),t.cleanShipList(),o.cleanShipList(),t.generateShips(),o.generateShips(),t.newShips=t.currentShips,o.newShips=o.currentShips,t.numberOfShips=10,o.numberOfShips=10,E.showShips("player1",10,t.currentShips),E.showShips("player2",10,o.currentShips),E.removeWinner("player1",S.gameboard1,S.player1Div),E.removeWinner("player2",S.gameboard2,S.player2Div),n="player1",e="no winner",r=0,S.setReset="no reset"}function s(n,r,a,i){"sunk"===n&&r.coordinates.forEach((function(n){document.querySelector(".".concat(a," .grid").concat(n)).classList.add("sunk"),e="player1"===i?o.noShipsAvailable(i,o.numberOfShips):t.noShipsAvailable(i,t.numberOfShips)}))}function l(){"reset"===S.getReset&&c(),window.requestAnimationFrame(l)}a.attack("player2",o);var A,u=Date.now();return function o(){var a=(A=Date.now())-u;if("reset"===S.getReset&&c(),"no winner"!==e){if(0===r){r+=1;var s=S.selectWinnerBoard(e),d=S.selectWinnerName(e);E.showWinner(e,s,d)}l()}if(a>1e3/60){if("player2"===n){var p=i.attack("player1");t.receiveAttack(p,"player2","player1")}u=A}window.requestAnimationFrame(o)}(),{currentTurn:n,setNextTurn:function(e,r,a,i,c){(e.className.includes("empty")||e.className.includes("hit"))&&(n=r),e.className.includes("empty")||e.className.includes("hit")||(E.displayMiss(e),E.displayHit(e),function(e,r,a,i,c){if(e.className.includes("hit")){var l;if("player1"===n){l=o.currentShips[c];var A,u=parseInt(i,10);l.currentHealth=l.hit(l.coordinates,u,l.currentHealth);var d=h(l.isSunk(l.currentHealth,o.numberOfShips),2);A=d[0],o.numberOfShips=d[1],s(A,l,"player2","player1")}else if("player2"===n){l=t.currentShips[c];var p,f=parseInt(i,10);l.currentHealth=l.hit(l.coordinates,f,l.currentHealth);var g=h(l.isSunk(l.currentHealth,t.numberOfShips),2);p=g[0],t.numberOfShips=g[1],s(p,l,"player1","player2")}n=r}else n=a}(e,r,a,i,c))},winner:e,get turn(){return n},get theWinner(){return e}}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,